knitr::opts_chunk$set(echo = TRUE)
data.brute.columns
data.brute.column
data.brute.name
data.brute.names
data.brute.named
names(data.brute)
colnames(data.brute)
colnames(data.brute)
data.brute = read.csv("divorce_df.csv")
str(data.brute)
colnames(data.brute)
# Nomn des colonnes
named_columns = colnames(data.brute)
# Nomn des colonnes
named_columns = colnames(data.brute)
for (name in named_columns){
boxplot(data.brute.name)
}
# Nom des colonnes
named_columns <- colnames(data.brute)
for (name in named_columns) {
boxplot(data.brute[[name]], main = name)
}
# Nom des colonnes
named_columns <- colnames(data.brute)
type_columns <- sapply(data.brute, class)
for (name in named_columns) {
if
boxplot(data.brute[[name]], main = name)
}
# Nom des colonnes
named_columns <- colnames(data.brute)
type_columns <- sapply(data.brute, class)
type_columns
for (name in named_columns) {
if type_columns
boxplot(data.brute[[name]], main = name)
}
# Nom des colonnes
named_columns <- colnames(data.brute)
type_columns <- sapply(data.brute, class)
type_columns[1]
for (name in named_columns) {
if type_columns
boxplot(data.brute[[name]], main = name)
}
# Nom des colonnes
named_columns <- colnames(data.brute)
type_columns <- sapply(data.brute, class)
type_columns
for (name in named_columns) {
if type_columns
boxplot(data.brute[[name]], main = name)
}
# Nom des colonnes
named_columns <- colnames(data.brute)
type_columns <- sapply(data.brute, class)
type_columns
for (name in named_columns) {
if (type_columns[name] == "integer"){
boxplot(data.brute[[name]], main = name)
}
}
# Nom des colonnes
named_columns <- colnames(data.brute)
type_columns <- sapply(data.brute, class)
for (name in named_columns) {
if (type_columns[name] == "integer"){
boxplot(data.brute[[name]], main = name)
}
}
- `num_children` = Si le couple est divorcé ou non (int)
- `employment_status` = Si le couple est divorcé ou non (int)
data.brute
data.brute.divorced
data.brute.$divorced
data.brute$divorced
count(data.brute$divorced)
sum(data.brute$divorced)
table(data.brute$divorced)
table(data.brute$num_children)
table(data.brute$infidelity_occurred)
table(data.brute$marriage_type)
table(data.brute$religious_compatibility)
table(data.brute$conflict_resolution_style)
table(data.brute$age_at_marriage)
table(data.brute$marriage_duration_years)
plot(table(data.brute$marriage_duration_years))
plot(table(data.brute$age_at_marriage))
plot(table(data.brute$age_at_marriage))
plot(table(data.brute$marriage_type))
plot(table(data.brute$age_at_marriage, data.brute$marriage_duration_years))
plot(table(data.brute$marriage_duration_years, data.brute$age_at_marriage))
plot(table(data.brute$age_at_marriage))
bar(table(data.brute$age_at_marriage))
barplot(table(data.brute$age_at_marriage))
barplot(table(data.brute$age_at_marriage), density = TRUE)
barplot(table(data.brute$age_at_marriage), frequency = TRUE)
barplot(table(data.brute$age_at_marriage), freq = TRUE)
barplot(table(data.brute$age_at_marriage), freq = FAlse)
barplot(table(data.brute$age_at_marriage), density = TRUE)
barplot(table(data.brute$age_at_marriage))
hist(table(data.brute$age_at_marriage), freq = FALSE)
hist(table(data.brute$age_at_marriage), freq = FALSE)
barplot(table(data.brute$age_at_marriage) / sum(table(data.brute$age_at_marriage)))
barplot(table(data.brute$age_at_marriage) / sum(table(data.brute$age_at_marriage)))
barplot(table(data.brute$age_at_marriage) / sum(table(data.brute$age_at_marriage)))
table(data.brute$age_at_marriage)
mean(table(data.brute$age_at_marriage))
mean(data.brute$age_at_marriage)
shapiro.test(data.brute$age_at_marriage)
qqnorm(data.brute$age_at_marriage)

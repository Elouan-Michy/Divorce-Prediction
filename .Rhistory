if (Type[i] == "Quantitative") {
var_name <- Nom_de_la_variable[i]
boxplot(data.brute[[var_name]], main = var_name)
}
}
# Nom des colonnes
# 🎨 Palette de couleurs (facultatif — tu peux la personnaliser)
palette_couleurs <- c("#5DADE2", "#58D68D", "#F4D03F", "#E67E22", "#AF7AC5")
for (i in seq_along(Nom_de_la_variable)) {
if (Type[i] == "Quantitative") {
var_name <- Nom_de_la_variable[i]
boxplot(
data.brute[[var_name]],
main = var_name,                     # titre
col = palette_couleurs[(i %% length(palette_couleurs)) + 1], # couleur de la boîte
border = "gray25",                   # couleur des contours
boxwex = 0.5,                        # largeur de la boîte
notch = TRUE,                        # encoche pour la médiane
outline = TRUE,                      # montrer les outliers
cex.main = 1.2,                      # taille du titre
cex.axis = 0.9,                      # taille des axes
las = 1,                             # orientation des étiquettes de l'axe
frame.plot = FALSE                   # supprime le cadre
)
# Ajouter une grille horizontale pour une meilleure lisibilité
grid(nx = NA, ny = NULL, col = "lightgray", lty = "dotted")
}
}
# 📌 Sélection des variables quantitatives
vars_quanti <- Nom_de_la_variable[Type == "Quantitative"]
# 📐 Définir la grille (ici 2 lignes × 3 colonnes par exemple)
nb_var <- length(vars_quanti)
nb_col <- 3
nb_row <- ceiling(nb_var / nb_col)
# 🪄 Création de la matrice de graphes
par(mfrow = c(nb_row, nb_col), mar = c(4, 4, 3, 1)) # mar = marges : bas, gauche, haut, droite
# 🎨 Palette de couleurs
palette_couleurs <- c("#5DADE2", "#58D68D", "#F4D03F", "#E67E22", "#AF7AC5")
# 🔁 Boucle
for (i in seq_along(vars_quanti)) {
var_name <- vars_quanti[i]
boxplot(
data.brute[[var_name]],
main = var_name,
col = palette_couleurs[(i %% length(palette_couleurs)) + 1],
border = "gray25",
boxwex = 0.5,
outline = TRUE,
cex.main = 1,
cex.axis = 0.8,
las = 1,
frame.plot = FALSE
)
grid(nx = NA, ny = NULL, col = "lightgray", lty = "dotted")
}
# ✨ Revenir au mode normal d'affichage
par(mfrow = c(1, 1))
vars_quanti <- Nom_de_la_variable[Type == "Quantitative"]
nb_var <- length(vars_quanti)
# 📐 Définir le nombre de colonnes et de lignes
nb_col <- 3  # ou 4 si tu veux plus de colonnes
nb_row <- ceiling(nb_var / nb_col)
# 📏 Agrandir la fenêtre graphique selon le nombre de variables
# (utile surtout sous RStudio ou R GUI)
options(repr.plot.width = nb_col * 4, repr.plot.height = nb_row * 4)
# 🪄 Mise en page
par(mfrow = c(nb_row, nb_col), mar = c(4, 4, 3, 1))
palette_couleurs <- c("#5DADE2", "#58D68D", "#F4D03F", "#E67E22", "#AF7AC5")
for (i in seq_along(vars_quanti)) {
var_name <- vars_quanti[i]
boxplot(
data.brute[[var_name]],
main = var_name,
col = palette_couleurs[(i %% length(palette_couleurs)) + 1],
border = "gray25",
boxwex = 0.5,
outline = TRUE,
cex.main = 1.1,
cex.axis = 0.9,
las = 1,
frame.plot = FALSE
)
grid(nx = NA, ny = NULL, col = "lightgray", lty = "dotted")
}
# Revenir à la disposition normale
par(mfrow = c(1, 1))
# 📌 Sélection des variables quantitatives
vars_quanti <- Nom_de_la_variable[Type == "Quantitative"]
# 📐 Définir la grille (ici 2 lignes × 3 colonnes par exemple)
nb_var <- length(vars_quanti)
nb_col <- 3
nb_row <- ceiling(nb_var / nb_col)
# 🪄 Création de la matrice de graphes
par(mfrow = c(nb_row, nb_col), mar = c(4, 4, 3, 1)) # mar = marges : bas, gauche, haut, droite
# 🎨 Palette de couleurs
palette_couleurs <- c("#5DADE2", "#58D68D", "#F4D03F", "#E67E22", "#AF7AC5")
# 🔁 Boucle
for (i in seq_along(vars_quanti)) {
var_name <- vars_quanti[i]
boxplot(
data.brute[[var_name]],
main = var_name,
col = palette_couleurs[(i %% length(palette_couleurs)) + 1],
border = "gray25",
boxwex = 0.5,
outline = TRUE,
cex.main = 1,
cex.axis = 0.8,
las = 1,
frame.plot = FALSE
)
grid(nx = NA, ny = NULL, col = "lightgray", lty = "dotted")
}
# ✨ Revenir au mode normal d'affichage
par(mfrow = c(1, 1))
# 📌 Sélection des variables quantitatives
vars_quanti <- Nom_de_la_variable[Type == "Quantitative"]
# 📐 Définir la grille (ici 2 lignes × 3 colonnes par exemple)
nb_var <- length(vars_quanti)
nb_col <- 3
nb_row <- ceiling(nb_var / nb_col)
# 🪄 Création de la matrice de graphes
par(mfrow = c(nb_row, nb_col), mar = c(0, 0, 0, 0)) # mar = marges : bas, gauche, haut, droite
# 🎨 Palette de couleurs
palette_couleurs <- c("#5DADE2", "#58D68D", "#F4D03F", "#E67E22", "#AF7AC5")
# 🔁 Boucle
for (i in seq_along(vars_quanti)) {
var_name <- vars_quanti[i]
boxplot(
data.brute[[var_name]],
main = var_name,
col = palette_couleurs[(i %% length(palette_couleurs)) + 1],
border = "gray25",
boxwex = 0.5,
outline = TRUE,
cex.main = 1,
cex.axis = 0.8,
las = 1,
frame.plot = FALSE
)
grid(nx = NA, ny = NULL, col = "lightgray", lty = "dotted")
}
# ✨ Revenir au mode normal d'affichage
par(mfrow = c(1, 1))
# 📌 Sélection des variables quantitatives
vars_quanti <- Nom_de_la_variable[Type == "Quantitative"]
# 📐 Définir la grille (ici 2 lignes × 3 colonnes par exemple)
nb_var <- length(vars_quanti)
nb_col <- 3
nb_row <- ceiling(nb_var / nb_col)
# 🪄 Création de la matrice de graphes
par(mfrow = c(nb_row, nb_col), mar = c(2, 0, 2, 0)) # mar = marges : bas, gauche, haut, droite
# 🎨 Palette de couleurs
palette_couleurs <- c("#5DADE2", "#58D68D", "#F4D03F", "#E67E22", "#AF7AC5")
# 🔁 Boucle
for (i in seq_along(vars_quanti)) {
var_name <- vars_quanti[i]
boxplot(
data.brute[[var_name]],
main = var_name,
col = palette_couleurs[(i %% length(palette_couleurs)) + 1],
border = "gray25",
boxwex = 0.5,
outline = TRUE,
cex.main = 1,
cex.axis = 0.8,
las = 1,
frame.plot = FALSE
)
grid(nx = NA, ny = NULL, col = "lightgray", lty = "dotted")
}
# ✨ Revenir au mode normal d'affichage
par(mfrow = c(1, 1))
# Sélection des variables quantitatives
vars_quanti <- Nom_de_la_variable[Type == "Quantitative"]
# On limite à 10 variables (ou tu peux prendre les 10 premières)
vars_quanti <- vars_quanti[1:min(10, length(vars_quanti))]
# 📐 Définition de la grille : 2 lignes × 5 colonnes
par(mfrow = c(2, 5), mar = c(4, 4, 3, 1))
# 📏 Ajustement de la taille de la figure
options(repr.plot.width = 5 * 3, repr.plot.height = 2 * 3)
palette_couleurs <- c("#5DADE2", "#58D68D", "#F4D03F", "#E67E22", "#AF7AC5")
for (i in seq_along(vars_quanti)) {
var_name <- vars_quanti[i]
boxplot(
data.brute[[var_name]],
main = var_name,
col = palette_couleurs[(i %% length(palette_couleurs)) + 1],
border = "gray25",
boxwex = 0.5,
outline = TRUE,
cex.main = 1.1,
cex.axis = 0.9,
las = 1,
frame.plot = FALSE
)
grid(nx = NA, ny = NULL, col = "lightgray", lty = "dotted")
}
# Revenir à l'affichage normal
par(mfrow = c(1, 1))
vars_quanti <- Nom_de_la_variable[Type == "Quantitative"]
# Limiter à 10 max
vars_quanti <- vars_quanti[1:min(10, length(vars_quanti))]
# Nombre total d'emplacements dans la grille
total_slots <- 2 * 5
# Nombre de cases vides à ajouter
empty_slots <- total_slots - length(vars_quanti)
# Crée une liste avec les noms de variables + cases vides
vars_quanti_filled <- c(vars_quanti, rep(NA, empty_slots))
# Grille 2 lignes × 5 colonnes
par(mfrow = c(2, 5), mar = c(4, 4, 3, 1))
options(repr.plot.width = 5 * 3, repr.plot.height = 2 * 3)
palette_couleurs <- c("#5DADE2", "#58D68D", "#F4D03F", "#E67E22", "#AF7AC5")
for (i in seq_along(vars_quanti_filled)) {
var_name <- vars_quanti_filled[i]
if (is.na(var_name)) {
# 🔸 Case vide → on trace un plot vide
plot.new()
} else {
boxplot(
data.brute[[var_name]],
main = var_name,
col = palette_couleurs[(i %% length(palette_couleurs)) + 1],
border = "gray25",
boxwex = 0.5,
outline = TRUE,
cex.main = 1.1,
cex.axis = 0.9,
las = 1,
frame.plot = FALSE
)
grid(nx = NA, ny = NULL, col = "lightgray", lty = "dotted")
}
}
par(mfrow = c(1, 1))
vars_quanti <- Nom_de_la_variable[Type == "Quantitative"]
# Limiter à 10 max
vars_quanti <- vars_quanti[1:min(10, length(vars_quanti))]
# Nombre total d'emplacements dans la grille
total_slots <- 2 * 5
# Nombre de cases vides à ajouter
empty_slots <- total_slots - length(vars_quanti)
# Crée une liste avec les noms de variables + cases vides
vars_quanti_filled <- c(vars_quanti, rep(NA, empty_slots))
# Grille 2 lignes × 5 colonnes
par(mfrow = c(2, 5), mar = c(4, 4, 3, 1))
options(repr.plot.width = 5 * 3, repr.plot.height = 2 * 3)
palette_couleurs <- c("#5DADE2", "#58D68D", "#F4D03F", "#E67E22", "#AF7AC5")
for (i in seq_along(vars_quanti_filled)) {
var_name <- vars_quanti_filled[i]
if (is.na(var_name)) {
# 🔸 Case vide → on trace un plot vide
plot.new()
} else {
boxplot(
data.brute[[var_name]],
main = var_name,
col = palette_couleurs[(i %% length(palette_couleurs)) + 1],
border = "gray25",
boxwex = 0.5,
outline = TRUE,
cex.main = 1.1,
cex.axis = 0.9,
las = 1,
frame.plot = FALSE
)
grid(nx = NA, ny = NULL, col = "lightgray", lty = "dotted")
}
}
par(mfrow = c(1, 1))
# Sélection des variables qualitatives
vars_quali <- Nom_de_la_variable[Type == "Qualitative"]
# Limiter à 10 max
vars_quali <- vars_quali[1:min(10, length(vars_quali))]
# Nombre total d'emplacements dans la grille
total_slots <- 2 * 5
# Nombre de cases vides à ajouter
empty_slots <- total_slots - length(vars_quali)
# Crée une liste avec les noms de variables + cases vides
vars_quali_filled <- c(vars_quali, rep(NA, empty_slots))
# 📐 Grille 2 lignes × 5 colonnes
par(mfrow = c(2, 5), mar = c(6, 4, 3, 1)) # marge basse augmentée pour les noms longs
options(repr.plot.width = 5 * 3, repr.plot.height = 2 * 3)
# 🎨 Palette de couleurs
palette_couleurs <- c("#5DADE2", "#58D68D", "#F4D03F", "#E67E22", "#AF7AC5")
for (i in seq_along(vars_quali_filled)) {
var_name <- vars_quali_filled[i]
if (is.na(var_name)) {
# 🔸 Case vide → on trace un plot vide
plot.new()
} else {
# 📊 Comptage des modalités
counts <- table(data.brute[[var_name]])
# 🧭 Titre avec retour à la ligne si besoin
main_title <- gsub("_", "\n", var_name)
barplot(
counts,
main = main_title,
col = palette_couleurs[(i %% length(palette_couleurs)) + 1],
border = "gray25",
cex.main = 0.9,
cex.axis = 0.8,
cex.names = 0.7,       # taille des noms des modalités
las = 2,               # rotation des labels pour qu’ils soient lisibles
frame.plot = FALSE
)
grid(nx = NA, ny = NULL, col = "lightgray", lty = "dotted")
}
}
# ✅ Revenir à une seule figure
par(mfrow = c(1, 1))
# Sélection des variables qualitatives
vars_quali <- Nom_de_la_variable[Type == "Qualitative"]
# Limiter à 10 max
vars_quali <- vars_quali[1:min(10, length(vars_quali))]
# Nombre total d'emplacements dans la grille
total_slots <- 2 * 5
# Nombre de cases vides à ajouter
empty_slots <- total_slots - length(vars_quali)
# Crée une liste avec les noms de variables + cases vides
vars_quali_filled <- c(vars_quali, rep(NA, empty_slots))
# 📐 Grille 2 lignes × 5 colonnes
par(mfrow = c(2, 5), mar = c(6, 4, 3, 1)) # marge basse augmentée pour les noms longs
options(repr.plot.width = 5 * 3, repr.plot.height = 2 * 3)
# 🎨 Palette de couleurs
palette_couleurs <- c("#5DADE2", "#58D68D", "#F4D03F", "#E67E22", "#AF7AC5")
for (i in seq_along(vars_quali_filled)) {
var_name <- vars_quali_filled[i]
if (is.na(var_name)) {
# 🔸 Case vide → on trace un plot vide
plot.new()
} else {
# 📊 Comptage des modalités
counts <- table(data.brute[[var_name]])
# 🧭 Titre avec retour à la ligne si besoin
main_title <- gsub("_", "\n", var_name)
barplot(
counts,
main = main_title,
col = palette_couleurs[(i %% length(palette_couleurs)) + 1],
border = "gray25",
cex.main = 0.9,
cex.axis = 0.8,
cex.names = 0.7,       # taille des noms des modalités
las = 2,               # rotation des labels pour qu’ils soient lisibles
frame.plot = FALSE
)
grid(nx = NA, ny = NULL, col = "lightgray", lty = "dotted")
}
}
# ✅ Revenir à une seule figure
par(mfrow = c(1, 1))
# Sélection des variables qualitatives
vars_quali <- Nom_de_la_variable[Type == "Qualitative"]
# Limiter à 10 max
vars_quali <- vars_quali[1:min(10, length(vars_quali))]
# Nombre total d'emplacements dans la grille
total_slots <- 2 * 5
# Nombre de cases vides à ajouter
empty_slots <- total_slots - length(vars_quali)
# Crée une liste avec les noms de variables + cases vides
vars_quali_filled <- c(vars_quali, rep(NA, empty_slots))
# 📐 Grille 2 lignes × 5 colonnes
par(mfrow = c(2, 6), mar = c(6, 4, 3, 1)) # marge basse augmentée pour les noms longs
options(repr.plot.width = 5 * 3, repr.plot.height = 2 * 3)
# 🎨 Palette de couleurs
palette_couleurs <- c("#5DADE2", "#58D68D", "#F4D03F", "#E67E22", "#AF7AC5")
for (i in seq_along(vars_quali_filled)) {
var_name <- vars_quali_filled[i]
if (is.na(var_name)) {
# 🔸 Case vide → on trace un plot vide
plot.new()
} else {
# 📊 Comptage des modalités
counts <- table(data.brute[[var_name]])
# 🧭 Titre avec retour à la ligne si besoin
main_title <- gsub("_", "\n", var_name)
barplot(
counts,
main = main_title,
col = palette_couleurs[(i %% length(palette_couleurs)) + 1],
border = "gray25",
cex.main = 0.9,
cex.axis = 0.8,
cex.names = 0.7,       # taille des noms des modalités
las = 2,               # rotation des labels pour qu’ils soient lisibles
frame.plot = FALSE
)
grid(nx = NA, ny = NULL, col = "lightgray", lty = "dotted")
}
}
# ✅ Revenir à une seule figure
par(mfrow = c(1, 1))
# Sélection des variables qualitatives
vars_quali <- Nom_de_la_variable[Type == "Qualitative"]
# Limiter à 10 max
vars_quali <- vars_quali[1:min(10, length(vars_quali))]
# Nombre total d'emplacements dans la grille
total_slots <- 2 * 6
# Nombre de cases vides à ajouter
empty_slots <- total_slots - length(vars_quali)
# Crée une liste avec les noms de variables + cases vides
vars_quali_filled <- c(vars_quali, rep(NA, empty_slots))
# 📐 Grille 2 lignes × 5 colonnes
par(mfrow = c(2, 6), mar = c(6, 4, 3, 1)) # marge basse augmentée pour les noms longs
options(repr.plot.width = 5 * 3, repr.plot.height = 2 * 3)
# 🎨 Palette de couleurs
palette_couleurs <- c("#5DADE2", "#58D68D", "#F4D03F", "#E67E22", "#AF7AC5")
for (i in seq_along(vars_quali_filled)) {
var_name <- vars_quali_filled[i]
if (is.na(var_name)) {
# 🔸 Case vide → on trace un plot vide
plot.new()
} else {
# 📊 Comptage des modalités
counts <- table(data.brute[[var_name]])
# 🧭 Titre avec retour à la ligne si besoin
main_title <- gsub("_", "\n", var_name)
barplot(
counts,
main = main_title,
col = palette_couleurs[(i %% length(palette_couleurs)) + 1],
border = "gray25",
cex.main = 0.9,
cex.axis = 0.8,
cex.names = 0.7,       # taille des noms des modalités
las = 2,               # rotation des labels pour qu’ils soient lisibles
frame.plot = FALSE
)
grid(nx = NA, ny = NULL, col = "lightgray", lty = "dotted")
}
}
# ✅ Revenir à une seule figure
par(mfrow = c(1, 1))
# Sélection des variables qualitatives
vars_quali <- Nom_de_la_variable[Type == "Qualitative"]
# Nombre total d'emplacements dans la grille
total_slots <- 2 * 6
# Nombre de cases vides à ajouter
empty_slots <- total_slots - length(vars_quali)
# Crée une liste avec les noms de variables + cases vides
vars_quali_filled <- c(vars_quali, rep(NA, empty_slots))
# 📐 Grille 2 lignes × 5 colonnes
par(mfrow = c(2, 6), mar = c(6, 4, 3, 1)) # marge basse augmentée pour les noms longs
options(repr.plot.width = 5 * 3, repr.plot.height = 2 * 3)
# 🎨 Palette de couleurs
palette_couleurs <- c("#5DADE2", "#58D68D", "#F4D03F", "#E67E22", "#AF7AC5")
for (i in seq_along(vars_quali_filled)) {
var_name <- vars_quali_filled[i]
if (is.na(var_name)) {
# 🔸 Case vide → on trace un plot vide
plot.new()
} else {
# 📊 Comptage des modalités
counts <- table(data.brute[[var_name]])
# 🧭 Titre avec retour à la ligne si besoin
main_title <- gsub("_", "\n", var_name)
barplot(
counts,
main = main_title,
col = palette_couleurs[(i %% length(palette_couleurs)) + 1],
border = "gray25",
cex.main = 0.9,
cex.axis = 0.8,
cex.names = 0.7,       # taille des noms des modalités
las = 2,               # rotation des labels pour qu’ils soient lisibles
frame.plot = FALSE
)
grid(nx = NA, ny = NULL, col = "lightgray", lty = "dotted")
}
}
# ✅ Revenir à une seule figure
par(mfrow = c(1, 1))
# Sélection des variables qualitatives
vars_quali <- Nom_de_la_variable[Type == "Qualitative"]
# Nombre total d'emplacements dans la grille
total_slots <- 2 * 6
# Nombre de cases vides à ajouter
empty_slots <- total_slots - length(vars_quali)
# Crée une liste avec les noms de variables + cases vides
vars_quali_filled <- c(vars_quali, rep(NA, empty_slots))
# 📐 Grille 2 lignes × 5 colonnes
par(mfrow = c(2, 6), mar = c(6, 4, 3, 1)) # marge basse augmentée pour les noms longs
options(repr.plot.width = 5 * 3, repr.plot.height = 2 * 3)
# 🎨 Palette de couleurs
palette_couleurs <- c("#5DADE2", "#58D68D", "#F4D03F", "#E67E22", "#AF7AC5")
for (i in seq_along(vars_quali_filled)) {
var_name <- vars_quali_filled[i]
if (is.na(var_name)) {
# 🔸 Case vide → on trace un plot vide
plot.new()
} else {
# 📊 Comptage des modalités
counts <- table(data.brute[[var_name]])
# 🧭 Titre avec retour à la ligne si besoin
main_title <- gsub("_", "\n", var_name)
barplot(
counts,
main = main_title,
col = palette_couleurs[(i %% length(palette_couleurs)) + 1],
border = "gray25",
cex.main = 0.9,
cex.axis = 0.8,
cex.names = 0.7,       # taille des noms des modalités
las = 2,               # rotation des labels pour qu’ils soient lisibles
frame.plot = FALSE
)
grid(nx = NA, ny = NULL, col = "lightgray", lty = "dotted")
}
}
# ✅ Revenir à une seule figure
par(mfrow = c(1, 1))
